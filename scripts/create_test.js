const Test = require("../model/test");
const mongoose = require("mongoose");


const { Question, Answer } = require("../model/question");

const questionIds = [
  "661d3cd750e2e750cce554c9",
  "661d3ce050e2e750cce554d2",
  "661d3ce050e2e750cce554d2",
  "661d3cf2cdc8f078f579144b",
  "661d3cfbcdc8f078f579145b",
  "661d3d05cdc8f078f5791462",
  "661d3d0ccdc8f078f5791469",
  "661d3d15cdc8f078f5791470",
  "661d3d1ecdc8f078f5791484",
  "661d3d26cdc8f078f57914f7",
  "661d3d2ecdc8f078f57914fe",
  "661d3d36cdc8f078f5791505",
  "661d3d3ccdc8f078f579150c",
  "661d3d40cdc8f078f5791518",
  "661d3d4650e2e750cce55550",
  "661d3d4b50e2e750cce55557",
  "661d3d50cdc8f078f5791945",
  "661d3d55cdc8f078f5791951",
  "661d3d5a50e2e750cce5555e",
  "661d3d5f50e2e750cce55565",
  "661d3d65cdc8f078f579195d",
  "661d3d6bcdc8f078f5791969",
  "661d3d71cdc8f078f5791970",
  "661d3d77cdc8f078f5791977",
  "661d3d7dcdc8f078f579197e",
  "661d3d83cdc8f078f5791985",
  "661d3d8acdc8f078f579198c",
  "661d3d90cdc8f078f5791993",
  "661d3d96cdc8f078f579199a",
  "661d3d9bcdc8f078f57919a1",
  "661d3da1cdc8f078f57919a8",
  "661d3da6cdc8f078f57919af",
  "661d3dabcdc8f078f57919b6",
  "661d3db1cdc8f078f57919bd",
  "661d3db6cdc8f078f57919c4",
  "661d3dbccdc8f078f57919cb",
  "661d3dc0cdc8f078f57919d2",
  "661d3dc6cdc8f078f57919d9",
  "661d3dcacdc8f078f57919e0",
  "661d3dcacdc8f078f57919e0",
  "661d3dd5cdc8f078f57919e7",
  "661d3ddbcdc8f078f57919ea",
  "661d3de1cdc8f078f57919ed",
  "661d3de7cdc8f078f57919f0",
  "661d3deccdc8f078f57919f3"
];

const ids = [
  "66214d1205dc0d81e402fa9c",
  "66214e8038e1d763c49c578d",
  "66214eb438e1d763c49c5790",
  "66214af98242b8b66c8439d4",
  "66214afd8242b8b66c8439d7",
  "66214b028242b8b66c8439da",
  "66214b078242b8b66c8439dd",
  "66214b0c8242b8b66c8439e0",
  "66214b118242b8b66c8439e3",
  "66214b168242b8b66c8439e6",
  "66214b1b8242b8b66c8439e9",
  "66214b208242b8b66c8439ec",
  "66214b258242b8b66c8439ef",
  "66214b2a8242b8b66c8439f2",
  "66214b2f8242b8b66c8439f5",
  "66214f2738e1d763c49c5793",
  "66214f6138e1d763c49c579a",
  "66214859fbe88a43975739f5",
  "66214860fbe88a43975739fc",
  "66214867fbe88a4397573a03",
  "6621486efbe88a4397573a0a",
  "66214874fbe88a4397573a11",
  "6621487bfbe88a4397573a18",
  "66214882fbe88a4397573a1f",
  "66214888fbe88a4397573a26",
  "6621488ffbe88a4397573a2d",
  "66214896fbe88a4397573a34",
  "6621489cfbe88a4397573a3b",
  "662148a1fbe88a4397573a42",
  "662148a6fbe88a4397573a49",
  "662148aafbe88a4397573a50",
  "662148b0fbe88a4397573a57",
  "662148b5fbe88a4397573a5e",
  "662148b9fbe88a4397573a65",
  "662148bffbe88a4397573a6c",
  "662148c3fbe88a4397573a73",
  "662148c8fbe88a4397573a7a",
  "662148cdfbe88a4397573a81",
  "662148d3fbe88a4397573a88",
  "662148d7fbe88a4397573a8f",
  "662148ddfbe88a4397573a96",
  "662148e2fbe88a4397573a9d",
  "662148e8fbe88a4397573aa4",
  "662148eefbe88a4397573aab",
  "662148f3fbe88a4397573ab2",
  "661d435f59ee06746847eedf",
  "661d43ee28fff0e67e924358",
  "661c237b4c66935e7abf91cc",
  "661c23834c66935e7abf91d3",
  "661c238a4c66935e7abf91da",
  "661c23924c66935e7abf91e1",
  "661c23994c66935e7abf91e8",
  "661c23a14c66935e7abf91ef",
  "661c23a94c66935e7abf91f6",
  "661c23b04c66935e7abf91fd",
  "661c23b84c66935e7abf9204",
  "661c23c04c66935e7abf920b",
  "661c23c54c66935e7abf9212",
  "661c23ca4c66935e7abf9219",
  "661c23cf4c66935e7abf9220",
  "661c23d44c66935e7abf9227",
  "661c23d94c66935e7abf922e",
  "661c23dd4c66935e7abf9235",
  "661c23e34c66935e7abf923c",
  "661c23e84c66935e7abf9243",
  "661c23ee4c66935e7abf924a",
  "661c23f34c66935e7abf9251",
  "661c23f94c66935e7abf9258",
  "661c23ff4c66935e7abf925f",
  "661c24044c66935e7abf9266",
  "661c240a4c66935e7abf926d",
  "661c24104c66935e7abf9274",
  "661c24174c66935e7abf927b",
  "661c241c4c66935e7abf9282",
  "661c24224c66935e7abf9289",
  "661c24284c66935e7abf9290",
  "661c242d4c66935e7abf9297",
  "661c24324c66935e7abf929e",
  "661c24384c66935e7abf92a5",
  "661c243d4c66935e7abf92ac",
  "661c24414c66935e7abf92b3",
  "661c24474c66935e7abf92ba",
  "661c244b4c66935e7abf92c1",
  "661c24514c66935e7abf92c8",
  "661c24554c66935e7abf92cf",
  "661c245b4c66935e7abf92d6",
  "661c245f4c66935e7abf92d9",
  "661c24654c66935e7abf92dc",
  "661c24694c66935e7abf92df",
  "661c246f4c66935e7abf92e2"
];

async function createTest() {
  const testObj = {
    name: "Mock 06",
    description: "Mock 06",
    instructions: "Read the instructions carefully before answering.",
    sections: [
      {
        name: "QA SA",
        questions: questionIds.slice(0, 15).map((qid) => ({
          _id: new mongoose.Types.ObjectId(qid),
          positives: 4,
          negatives: 0,
        })),
        duration: 2400,
      },
      {
        name: "QA MCQ",
        questions: questionIds.slice(15, 45).map((qid) => ({
          _id: new mongoose.Types.ObjectId(qid),
          positives: 4,
          negatives: 1,
        })),
        duration: 2400,
      },
      {
        name: "VA MCQ",
        questions: questionIds.slice(45, 90).map((qid) => ({
          _id: new mongoose.Types.ObjectId(qid),
          positives: 4,
          negatives: 1,
        }
        )),
        duration: 2400,
      },
    ],
    duration: 7200,
  };
  console.log(JSON.stringify(testObj))
  let test = await Test.create(testObj);
  return test;
}

async function createVa() {
  const testObj = {
    name: "Verbal Sectional Mock 14",
    description: "Verbal Sectional Mock 14",
    instructions: "Read the instructions carefully before answering.",
    sections: [
      {
        name: "VA",
        questions: questionIds.map((qid) => ({
          _id: new mongoose.Types.ObjectId(qid),
          positives: 4,
          negatives: 1,
        })),
        duration: 2400,
      }
    ],
    duration: 2400,
  };
  console.log(JSON.stringify(testObj))
  let test = await Test.create(testObj);
  return test;
}

async function deleteDocumentById(idToDelete) {
  try {
      const result = await Question.findByIdAndDelete(idToDelete);
      console.log('Document deleted successfully:', result);
  } catch (error) {
      console.error('Error deleting document:', error);
  }
}

async function checkAnswers() {
  // console.log(await Question.findOne({_id: "66048be7691c910136bb453d"}))
  // console.log(await Answer.create({
  //   _id: "66048be7691c910136bb453d",
  //   answer: "66048be7691c910136bb4541",
  //   solution: "https://res.cloudinary.com/dnxhyhnvn/image/upload/v1711325815/Permutation%20and%20Combination%20and%20Probability/PCP_Q19_mfgbhm.png",
  // }))
  for (const item of ids) {
    let ansObj = (await Answer.findOne({ _id: item }));
    if (ansObj == null) {
      console.log(item, "->", "answer does not exist for this item")
      // await deleteDocumentById(item);
      continue;
    }
    console.log(item, "->", ansObj.answer)
  }
}

async function checkTags() {
  for (const item of ids) {
    let QuestionObj = (await Question.findOne({ _id: item }));
    if (QuestionObj == null) {
      console.log(item, "->", "Question does not exist")
      continue;
    }
    console.log(item, "->", QuestionObj.meta.topic)
  }
}

const answerIds = [
  "6603d87fd11521729601e4c8",
  "6603d91cd11521729601e4d6",
  "660429716b1edebf01c811b6",
  "660468f7e3d1819abe60f118",
  "660468fbbc83701966a0515f",
  "66046942bc83701966a05164",
  "66046946bc83701966a0516b",
  "66046955bc83701966a05172",
  "6604695dbc83701966a05179",
  "6604697abc83701966a05180",
  "660469d8bc83701966a05183",
  "66046a67bc83701966a0519e",
  "66046b16bc83701966a051a5",
  "66046c8cbc83701966a051b3",
  "66046ca5bc83701966a051b6",
  "66046cebbc83701966a051bd",
  "66046d3fbc83701966a051c0",
  "66046d7dbc83701966a051c7",
  "66046df0bc83701966a051ca",
  "66046e0fbc83701966a051d1",
  "66046e69bc83701966a051d4",
  "66046ee0bc83701966a051db",
  "66046eeebc83701966a051e2",
  "66046f98bc83701966a051e5",
  "66046f9fbc83701966a051e8",
  "66047036bc83701966a051f7",
  "66047040bc83701966a051fe",
  "660470d7bc83701966a05201",
  "660470f1bc83701966a05208",
  "6604719dbc83701966a0520b",
  "660471babc83701966a0520e",
  "6604722ebc83701966a05215",
  "6604726fbc83701966a05218",
  "66047298bc83701966a0521f",
  "660472cebc83701966a05222",
  "660472fbbc83701966a05225",
  "6604732fbc83701966a0522c",
  "66047395bc83701966a0522f",
  "66047c38e3dc09d3365da701",
  "66047c57e3dc09d3365da708",
  "66047cb7e3dc09d3365da70f",
  "66047ccae3dc09d3365da716",
  "66047d24e3dc09d3365da71d",
  "66047d5ce3dc09d3365da724",
  "66047d81e3dc09d3365da72b",
  "66047dc5e3dc09d3365da732",
  "66047dd6e3dc09d3365da739",
  "66047e18e3dc09d3365da740",
  "66047e39e3dc09d3365da747",
  "66047e93e3dc09d3365da74e",
  "66047ee8e3dc09d3365da755",
  "66047f36e3dc09d3365da75c",
  "66047f97e3dc09d3365da763",
  "66048028e3dc09d3365da76a",
  "66048183834bb75f0886054f",
  "660481876a1b3dc7f922e937",
  "6604818f6a1b3dc7f922e940",
  "6604819c6a1b3dc7f922e947",
  "660481a56a1b3dc7f922e94e",
  "660482fe6a1b3dc7f922e955",
  "660483076a1b3dc7f922e95c",
  "6604830e6a1b3dc7f922e963",
  "660483386a1b3dc7f922e974",
  "6604834d6a1b3dc7f922e97b",
  "660483576a1b3dc7f922e982",
  "660483636a1b3dc7f922e989",
  "6604836e6a1b3dc7f922e990",
  "6604837a6a1b3dc7f922e997",
  "660485a92297bfba3a33f634",
  "660485ab2297bfba3a33f63d",
  "660485ac2297bfba3a33f644",
  "660485ef2297bfba3a33f64b",
  "660485fc2297bfba3a33f652",
  "660486062297bfba3a33f659",
  "6604860f2297bfba3a33f660",
  "660486172297bfba3a33f667",
  "6604861f2297bfba3a33f66e",
  "660486ef2297bfba3a33f675",
  "66048710ec5e8c3729264cda",
  "66048846691c910136bb4522",
  "66048849c571ff467365debe",
  "660488abc571ff467365dec7",
  "66048901c571ff467365dece",
  "660489a9c571ff467365ded5",
  "660489cdc571ff467365dedc",
  "660489e1c571ff467365dee8",
  "660489f0c571ff467365deef",
  "660489fdc571ff467365def6",
  "66048a08c571ff467365defd",
  "66048a14c571ff467365df04",
  "66048a21c571ff467365df0b",
  "66048a55c571ff467365df12",
  "66048aabc571ff467365df19",
  "66048aab691c910136bb452b",
  "66048abf691c910136bb452e",
  "66048b93691c910136bb4536",
  "66048c45691c910136bb4543",
  "66048cab691c910136bb454a",
  "66048cb7691c910136bb454d",
  "66048cbf691c910136bb4550",
  "66048cc0691c910136bb4553",
  "66048cca691c910136bb455a",
  "66048cd2691c910136bb455d",
  "66048dab691c910136bb4560",
  "660596ee44f4eb0feec7ad40",
  "6605984044f4eb0feec7ad4b",
  "6605a9d87bcdeffaf95937d4",
  "6605aab97bcdeffaf95937db",
  "66048be7691c910136bb453d",
  "6606440bfc87952b328225fe",
  "660648519cb28d7674959d7d",
  "66064856db73bd0435c440b8",
  "660812d7e369c1de3d024b6f",
  "6608149e8a16d3c5f633779e",
  "660815838a16d3c5f63377a5",
  "66081751cc2848fae3f29eaa",
  "66082376898f40deea3a8cc5",
  "660823fd898f40deea3a8ccc",
  "66087655b3cf0f77b6ebbdf8",
  "66087662b3cf0f77b6ebbe01",
  "66087698b3cf0f77b6ebbe08",
  "66087b3cd94a4104b16702a1",
  "66087cf03db39dc230d30695",
  "66087da289569e1acb9ea6ff",
  "66087e6989569e1acb9ea706",
  "66087f7e89569e1acb9ea70d",
  "6608805d89569e1acb9ea71a",
  "660880ce89569e1acb9ea721",
  "660881c689569e1acb9ea728",
  "6608821689569e1acb9ea72f",
  "6608827c89569e1acb9ea738",
  "6608827f89569e1acb9ea73f",
  "6608836989569e1acb9ea746",
  "660883b789569e1acb9ea74d",
  "6608849d89569e1acb9ea754",
  "660884ad89569e1acb9ea75b",
  "660885f9aa331162be47d895",
  "660886bf1a476941f6b622c7",
  "66088b845e229368f699b4dc",
  "66088dbd4b82eaf8df1698a6",
  "66088dc1c75fdca65ce7de9d",
  "66088e26c75fdca65ce7dea6",
  "6608906fc75fdca65ce7deb9",
  "660890dfc75fdca65ce7dec0",
  "6608924ac75fdca65ce7decd",
  "660892a3c75fdca65ce7ded4",
  "660892acc75fdca65ce7dedb",
  "66089385c75fdca65ce7dee2",
  "660893dcc75fdca65ce7dee9",
  "6608989cd2280ed11c678ec6",
  "66091e16043c5fb887405cc8",
  "66091e8e043c5fb887405ccf",
  "66091f1b043c5fb887405cd6",
  "66091fac043c5fb887405cdd",
  "6609217c468ffce839883baf",
  "6609218283d1fb8f5cc5aa0a",
  "6609220e83d1fb8f5cc5aa28",
  "660922f3468ffce839883bb8",
  "660923f20b0a86ff71d1761b",
  "660924720b0a86ff71d17622",
  "6609253a0b0a86ff71d17629",
  "660925b43b1ab7316285807f",
  "660926543b1ab73162858088",
  "6609275a3b1ab7316285808f",
  "6609a51ecf92c23809e3b959",
  "6609a551cf92c23809e3b960",
  "6609a55bcf92c23809e3b967",
  "6609a5a7cf92c23809e3b96e",
  "6609a5f0cf92c23809e3b975",
  "6609a64ecf92c23809e3b97c",
  "6609a6abcf92c23809e3b983",
  "6609a6cacf92c23809e3b98e",
  "6609a727cf92c23809e3b995",
  "6609a790cf92c23809e3b99c",
  "6609a811cf92c23809e3b9a4",
  "6609a81ccf92c23809e3b9ab",
  "6609a8e4cf92c23809e3b9b2",
  "6609a9aecf92c23809e3b9b9",
  "6609aa19cf92c23809e3b9c0",
  "6609aa8fcf92c23809e3b9c7",
  "6609aae6cf92c23809e3b9ce",
  "6609ace9cf92c23809e3bb57",
  "6609ace911fbb64735eb7403",
  "6609ad4a11fbb64735eb7593",
  "6609b6d990f43d07c1f08723",
  "6609bbcf6f948ee9fa1947d0",
  "6609bfb98f85dd6e73822aeb",
  "6609bfbc8f85dd6e73822af4",
  "6609bfbc8f85dd6e73822afb",
  "6609bfbf157711b6bf94ee11",
  "6609bfdc157711b6bf94ee1a",
  "6609c043157711b6bf94ee1d",
  "6609c04a157711b6bf94ee24",
  "6609c06f157711b6bf94ee31",
  "6609c095157711b6bf94ee34",
  "6609c0a2157711b6bf94ee37",
  "6609c0c9157711b6bf94ee44",
  "6609c12e157711b6bf94ee5f",
  "6609c2118f85dd6e73822b0e",
  "6609c2b08f85dd6e73822b21",
  "6609c2b68f85dd6e73822b28",
  "6609c2b98f85dd6e73822b2f",
  "6609c705a055f35e0cdff6a0",
  "6609ca01a055f35e0cdff6cd",
  "6609caa8a055f35e0cdff6ee",
  "6609cae47df625a986c09624",
  "6609cd87ea56293d10faf8d7",
  "6609cdecea56293d10faf8e0",
  "6609d08a47c6061f177565cb",
  "6609d08e8489d45c161018e4",
  "6609d0bc8489d45c161018ed",
  "6609d0c08489d45c161018f4",
  "6609d1688489d45c161018fb",
  "6609d1ae8489d45c16101905",
  "6609d1b18489d45c1610190c",
  "6609d1f28489d45c16101913",
  "6609de9622ed158f78becb4c"
];


async function checkQuestions() {
  for (const item of answerIds) {
    let QuestionObj = (await Question.findOne({ _id: item }));
    if (QuestionObj == null) {
      console.log(item, "->", "Question does not exist for this answer")
      continue;
    }
  }
}

module.exports = { createTest, checkAnswers, checkQuestions, createVa }

